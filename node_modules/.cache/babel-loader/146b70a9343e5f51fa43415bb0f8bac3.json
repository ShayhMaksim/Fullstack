{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"J:\\\\Programming\\\\Fullstack\\\\calculator_front-end\\\\src\\\\Calculator.js\";\nimport React from 'react';\nimport CalculatorPanel from './CalculatorPanel';\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      result: \"\",\n      numbers: [\"\", \"\"],\n      numberIdx: 0,\n      operation: \"\"\n    };\n  }\n\n  operationHandler(operation) {\n    if (this.state.numberIdx === 1) {\n      this.equalHandler();\n      return;\n    }\n\n    if ((operation === \"substract\" || operation === \"add\") && this.state.number[this.state.numberIdx] === \"\") {\n      this.numberHandler(operation === \"substract\" ? \"-\" : \"+\");\n      return;\n    }\n  }\n\n  setOperation(operation) {\n    this.setState({\n      operation: operation\n    });\n  }\n\n  nextNumber() {\n    const newIdx = this.state.numberIdx === 0 ? 1 : 0;\n    this.setState({\n      result: this.state.numbers[newIdx],\n      numberIdx: newIdx\n    });\n  }\n\n  numberHandler(number) {\n    const newNumber = this.state.number[this.state.numberIdx] + number;\n    this.updateNumber(newNumber);\n  }\n\n  updateNumber(newNumber) {\n    var newNumbers = this.state.number;\n    newNumbers[this.state.numberIdx] = newNumber;\n    this.setState({\n      result: newNumbers[this.state.numberIdx],\n      numbers: newNumbers\n    });\n  }\n\n  dotHandler() {\n    const newNumber = this.state.numbers[this.state.numberIdx] + \".\";\n\n    if (isNaN(newNumber)) {\n      return;\n    }\n\n    this.updateNumber(newNumber);\n  }\n\n  clearHandler() {\n    this.sesState({\n      result: \"\",\n      number: [\"\", \"\"],\n      numberIdx: 0\n    });\n  }\n\n  equalHandler() {\n    if (this.state.numbers[0] === \"\" || this.state.numbers[1] === \"\") {\n      return;\n    }\n\n    this.props.calculatorApi.calculate(this.state.numbers[0], this.state.numbers[1], this.state.operation, result => {\n      this.setResult(result);\n    });\n  }\n\n  setResult(result) {\n    const newNumbers = [result, \"\"];\n    const newNumberIdx = 0;\n    this.setState({\n      result: newNumbers[newNumberIdx],\n      numbers: newNumbers,\n      numberIdx: newNumberIdx,\n      operation: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator-grid-container\",\n      children: /*#__PURE__*/_jsxDEV(CalculatorPanel, {\n        result: this.state.result,\n        numberClicked: this.numberHandler.bind(this),\n        operationClicked: this.operationHandler.bind(this),\n        dotClicked: this.dotHandler.bind(this),\n        equaClicked: this.equalHandler.bind(this),\n        clearClicked: this.clearHandler.bind(this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Calculator;","map":{"version":3,"sources":["J:/Programming/Fullstack/calculator_front-end/src/Calculator.js"],"names":["React","CalculatorPanel","Calculator","Component","constructor","props","state","result","numbers","numberIdx","operation","operationHandler","equalHandler","number","numberHandler","setOperation","setState","nextNumber","newIdx","newNumber","updateNumber","newNumbers","dotHandler","isNaN","clearHandler","sesState","calculatorApi","calculate","setResult","newNumberIdx","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport CalculatorPanel from './CalculatorPanel'\r\n\r\nclass Calculator extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            result:\"\",\r\n            numbers:[\"\",\"\"],\r\n            numberIdx:0,\r\n            operation:\"\",\r\n        };\r\n    }\r\n\r\n    operationHandler(operation) {\r\n        if (this.state.numberIdx===1){\r\n            this.equalHandler();\r\n            return;\r\n        }\r\n\r\n        if ((operation===\"substract\"|| operation===\"add\") && this.state.number[this.state.numberIdx]===\"\")\r\n        {\r\n            this.numberHandler(operation===\"substract\" ?\"-\":\"+\");\r\n            return;\r\n        }\r\n\r\n    }\r\n\r\n    setOperation(operation) {\r\n        this.setState(\r\n            {operation:operation}\r\n        )\r\n    }\r\n\r\n    nextNumber(){\r\n        const newIdx=this.state.numberIdx===0 ? 1 : 0\r\n        this.setState({\r\n            result: this.state.numbers[newIdx],\r\n            numberIdx:newIdx,\r\n        });\r\n    }\r\n\r\n    numberHandler(number) {\r\n        const newNumber=this.state.number[this.state.numberIdx]+number;\r\n        this.updateNumber(newNumber);\r\n    }\r\n\r\n    updateNumber(newNumber){\r\n        var newNumbers=this.state.number;\r\n        newNumbers[this.state.numberIdx]=newNumber;\r\n        this.setState({\r\n            result:newNumbers[this.state.numberIdx],\r\n            numbers:newNumbers,\r\n        });\r\n    }\r\n\r\n    dotHandler(){\r\n        const newNumber=this.state.numbers[this.state.numberIdx]+\".\";\r\n        if(isNaN(newNumber)){\r\n            return;\r\n        }\r\n\r\n        this.updateNumber(newNumber);\r\n    }\r\n\r\n    clearHandler(){\r\n        this.sesState(\r\n            {\r\n                result:\"\",\r\n                number:[\"\",\"\"],\r\n                numberIdx:0,\r\n            }\r\n        )\r\n    }\r\n\r\n    equalHandler(){\r\n        if (this.state.numbers[0]===\"\"|| this.state.numbers[1] === \"\"){\r\n            return;\r\n        }\r\n\r\n        this.props.calculatorApi.calculate(\r\n            this.state.numbers[0],\r\n            this.state.numbers[1],\r\n            this.state.operation,\r\n            (result) =>{\r\n                this.setResult(result);\r\n            }\r\n        );\r\n    }\r\n\r\n    setResult(result) {\r\n        const newNumbers = [result,\"\"]\r\n        const newNumberIdx=0;\r\n        this.setState(\r\n            {\r\n                result:newNumbers[newNumberIdx],\r\n                numbers:newNumbers,\r\n                numberIdx:newNumberIdx,\r\n                operation:\"\",\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return <div className=\"calculator-grid-container\">\r\n            <CalculatorPanel\r\n                result={this.state.result}\r\n                numberClicked={this.numberHandler.bind(this)}\r\n                operationClicked={this.operationHandler.bind(this)}\r\n                dotClicked={this.dotHandler.bind(this)}\r\n                equaClicked={this.equalHandler.bind(this)}\r\n                clearClicked={this.clearHandler.bind(this)}\r\n            />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Calculator;"]},"metadata":{},"sourceType":"module"}